"""LCM type definitions
This file automatically generated by lcm.
DO NOT MODIFY BY HAND!!!!
"""

try:
    import cStringIO.StringIO as BytesIO
except ImportError:
    from io import BytesIO
import struct

class SystemStatus_t(object):
    __slots__ = ["drone_id", "infra_status", "nav_status", "ap_status"]

    __typenames__ = ["int32_t", "int32_t", "string", "string"]

    __dimensions__ = [None, None, None, None]

    def __init__(self):
        self.drone_id = 0
        self.infra_status = 0
        self.nav_status = ""
        self.ap_status = ""

    def encode(self):
        buf = BytesIO()
        buf.write(SystemStatus_t._get_packed_fingerprint())
        self._encode_one(buf)
        return buf.getvalue()

    def _encode_one(self, buf):
        buf.write(struct.pack(">ii", self.drone_id, self.infra_status))
        __nav_status_encoded = self.nav_status.encode('utf-8')
        buf.write(struct.pack('>I', len(__nav_status_encoded)+1))
        buf.write(__nav_status_encoded)
        buf.write(b"\0")
        __ap_status_encoded = self.ap_status.encode('utf-8')
        buf.write(struct.pack('>I', len(__ap_status_encoded)+1))
        buf.write(__ap_status_encoded)
        buf.write(b"\0")

    def decode(data):
        if hasattr(data, 'read'):
            buf = data
        else:
            buf = BytesIO(data)
        if buf.read(8) != SystemStatus_t._get_packed_fingerprint():
            raise ValueError("Decode error")
        return SystemStatus_t._decode_one(buf)
    decode = staticmethod(decode)

    def _decode_one(buf):
        self = SystemStatus_t()
        self.drone_id, self.infra_status = struct.unpack(">ii", buf.read(8))
        __nav_status_len = struct.unpack('>I', buf.read(4))[0]
        self.nav_status = buf.read(__nav_status_len)[:-1].decode('utf-8', 'replace')
        __ap_status_len = struct.unpack('>I', buf.read(4))[0]
        self.ap_status = buf.read(__ap_status_len)[:-1].decode('utf-8', 'replace')
        return self
    _decode_one = staticmethod(_decode_one)

    _hash = None
    def _get_hash_recursive(parents):
        if SystemStatus_t in parents: return 0
        tmphash = (0x77e6ecdd0b2635cc) & 0xffffffffffffffff
        tmphash  = (((tmphash<<1)&0xffffffffffffffff) + (tmphash>>63)) & 0xffffffffffffffff
        return tmphash
    _get_hash_recursive = staticmethod(_get_hash_recursive)
    _packed_fingerprint = None

    def _get_packed_fingerprint():
        if SystemStatus_t._packed_fingerprint is None:
            SystemStatus_t._packed_fingerprint = struct.pack(">Q", SystemStatus_t._get_hash_recursive([]))
        return SystemStatus_t._packed_fingerprint
    _get_packed_fingerprint = staticmethod(_get_packed_fingerprint)

